1. List all columns of OrderItem table.

mysql> SHOW COLUMNS FROM ORDER_ITEM;
+--------------------+---------------+------+-----+---------+-------+
| Field              | Type          | Null | Key | Default | Extra |
+--------------------+---------------+------+-----+---------+-------+
| ORDER_ID           | varchar(40)   | NO   | PRI | NULL    |       |
| ORDER_ITEM_SEQ_ID  | varchar(40)   | NO   | PRI | NULL    |       |
| ORDER_PART_SEQ_ID  | varchar(40)   | YES  |     | NULL    |       |
| PRODUCT_ID         | varchar(40)   | YES  | MUL | NULL    |       |
| ITEM_DESCRIPTION   | varchar(255)  | YES  |     | NULL    |       |
| QUANTITY           | decimal(26,6) | YES  |     | NULL    |       |
| UNIT_AMOUNT        | decimal(25,5) | YES  |     | NULL    |       |
| ITEM_TYPE_ENUM_ID  | varchar(40)   | YES  |     | NULL    |       |
| PARENT_ITEM_SEQ_ID | varchar(40)   | YES  |     | NULL    |       |
+--------------------+---------------+------+-----+---------+-------+

2. List the person details for all females.

mysql> SELECT * FROM Person WHERE GENDER = "F";
+-----------+------------+------------+-------------+-----------+--------+------------+------------------------+---------------------------+-------------------+
| PARTY_ID  | SALUTATION | FIRST_NAME | MIDDLE_NAME | LAST_NAME | GENDER | BIRTH_DATE | MARITAL_STATUS_ENUM_ID | EMPLOYMENT_STATUS_ENUM_ID | OCCUPATION        |
+-----------+------------+------------+-------------+-----------+--------+------------+------------------------+---------------------------+-------------------+
| CustDemo3 | Ms         | Lily       | J           | Brown     | F      | 1998-06-11 | MarsDivorced           | EmpsPartTime              | Software Engineer |
| CustDemo4 | Ms         | John       | J           | Norvig    | F      | 1998-06-11 | MarsSingle             | EmpsFullTime              | Software Engineer |
+-----------+------------+------------+-------------+-----------+--------+------------+------------------------+---------------------------+-------------------+

3. List the Order Header table contents so that the latest placed order appears in the top.

mysql> SELECT * FROM ORDER_HEADER ORDER BY PLACED_DATE DESC;
+----------+--------------+-------------------------+-------------------------+----------------+-----------------+-------------------+-----------------------+-------------+
| ORDER_ID | ORDER_NAME   | PLACED_DATE             | APPROVED_DATE           | STATUS_ID      | CURRENCY_UOM_ID | PRODUCT_STORE_ID  | SALES_CHANNEL_ENUM_ID | GRAND_TOTAL |
+----------+--------------+-------------------------+-------------------------+----------------+-----------------+-------------------+-----------------------+-------------+
| 100064   | Test Order 7 | 2022-01-09 00:00:00.000 | 2022-01-10 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     48.8700 |
| 100102   | Test Order 3 | 2021-04-17 00:00:00.000 | 2021-04-21 00:00:00.000 | OrderCompleted | USD             | OMS_DEFAULT_STORE | ScWeb                 |    129.9200 |
| 100153   | Test Order 4 | 2020-04-19 00:00:00.000 | 2020-04-21 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     31.6400 |
| 100051   | Test Order 1 | 2020-04-17 00:00:00.000 | 2020-04-19 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     77.9500 |
| 100052   | Test Order 2 | 2020-04-17 00:00:00.000 | 2020-05-18 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     16.3200 |
| 100255   | Test Order 5 | 2020-03-19 00:00:00.000 | 2020-03-21 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     75.9300 |
| 100061   | Test Order 6 | 2019-04-24 00:00:00.000 | 2019-04-28 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     87.0700 |
+----------+--------------+-------------------------+-------------------------+----------------+-----------------+-------------------+-----------------------+-------------+

4. List the Person details with MarsMarried marital status.

mysql> SELECT * FROM Person WHERE MARITAL_STATUS_ENUM_ID = "MarsMarried";
+-----------+------------+------------+-------------+-----------+--------+------------+------------------------+---------------------------+----------------+
| PARTY_ID  | SALUTATION | FIRST_NAME | MIDDLE_NAME | LAST_NAME | GENDER | BIRTH_DATE | MARITAL_STATUS_ENUM_ID | EMPLOYMENT_STATUS_ENUM_ID | OCCUPATION     |
+-----------+------------+------------+-------------+-----------+--------+------------+------------------------+---------------------------+----------------+
| CustDemo2 | Mr         | Jack       | John        | Smith     | M      | 1999-09-14 | MarsMarried            | EmpsFullTime              | Doctor         |
| CustDemo5 | Mr         | Charlie    | Jack        | William   | M      | 1992-04-22 | MarsMarried            | EmpsSelf                  | Architect      |
| CustDemo6 | Mr         | James      | W           | Evans     | M      | 1993-05-20 | MarsMarried            | EmpsFullTime              | Civil Engineer |
+-----------+------------+------------+-------------+-----------+--------+------------+------------------------+---------------------------+----------------+
3 rows in set (0.00 sec)

5. Output the count of Order Parts for each shipment Method Enum Id.

mysql> SELECT COUNT(*),SHIPMENT_METHOD_ENUM_ID FROM ORDER_PART GROUP BY SHIPMENT_METHOD_ENUM_ID;
+----------+-------------------------+
| COUNT(*) | SHIPMENT_METHOD_ENUM_ID |
+----------+-------------------------+
|        7 | ShMthGround             |
|        5 | ShMthNextDay            |
+----------+-------------------------+

6. List the Order Header details with grand total greater than 50.

mysql> SELECT * FROM ORDER_HEADER WHERE GRAND_TOTAL > 50;
+----------+--------------+-------------------------+-------------------------+----------------+-----------------+-------------------+-----------------------+-------------+
| ORDER_ID | ORDER_NAME   | PLACED_DATE             | APPROVED_DATE           | STATUS_ID      | CURRENCY_UOM_ID | PRODUCT_STORE_ID  | SALES_CHANNEL_ENUM_ID | GRAND_TOTAL |
+----------+--------------+-------------------------+-------------------------+----------------+-----------------+-------------------+-----------------------+-------------+
| 100051   | Test Order 1 | 2020-04-17 00:00:00.000 | 2020-04-19 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     77.9500 |
| 100061   | Test Order 6 | 2019-04-24 00:00:00.000 | 2019-04-28 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     87.0700 |
| 100102   | Test Order 3 | 2021-04-17 00:00:00.000 | 2021-04-21 00:00:00.000 | OrderCompleted | USD             | OMS_DEFAULT_STORE | ScWeb                 |    129.9200 |
| 100255   | Test Order 5 | 2020-03-19 00:00:00.000 | 2020-03-21 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     75.9300 |
+----------+--------------+-------------------------+-------------------------+----------------+-----------------+-------------------+-----------------------+-------------+

7. List the Person details who have not placed any orders.

mysql> SELECT * FROM Person WHERE PARTY_ID NOT IN 
    -> (SELECT CUSTOMER_PARTY_ID FROM ORDER_PART GROUP BY CUSTOMER_PARTY_ID);
+-----------+------------+------------+-------------+-----------+--------+------------+------------------------+---------------------------+------------+
| PARTY_ID  | SALUTATION | FIRST_NAME | MIDDLE_NAME | LAST_NAME | GENDER | BIRTH_DATE | MARITAL_STATUS_ENUM_ID | EMPLOYMENT_STATUS_ENUM_ID | OCCUPATION |
+-----------+------------+------------+-------------+-----------+--------+------------+------------------------+---------------------------+------------+
| CustDemo2 | Mr         | Jack       | John        | Smith     | M      | 1999-09-14 | MarsMarried            | EmpsFullTime              | Doctor     |
+-----------+------------+------------+-------------+-----------+--------+------------+------------------------+---------------------------+------------+

8. List the Person details whose first name starts with ‘J’ and third character is ’h’.

mysql> SELECT * FROM Person WHERE FIRST_NAME LIKE "J_h%";
+-----------+------------+------------+-------------+-----------+--------+------------+------------------------+---------------------------+-------------------+
| PARTY_ID  | SALUTATION | FIRST_NAME | MIDDLE_NAME | LAST_NAME | GENDER | BIRTH_DATE | MARITAL_STATUS_ENUM_ID | EMPLOYMENT_STATUS_ENUM_ID | OCCUPATION        |
+-----------+------------+------------+-------------+-----------+--------+------------+------------------------+---------------------------+-------------------+
| CustDemo4 | Ms         | John       | J           | Norvig    | F      | 1998-06-11 | MarsSingle             | EmpsFullTime              | Software Engineer |
+-----------+------------+------------+-------------+-----------+--------+------------+------------------------+---------------------------+-------------------+

9. List all Order Item details for the order with orderId, 100102 and orderPartSeqId, 01.

mysql> SELECT * FROM ORDER_ITEM WHERE Order_Id = '100102' AND Order_Part_Seq_Id = '01';
+----------+-------------------+-------------------+-------------+-----------------------+----------+-------------+-------------------+--------------------+
| ORDER_ID | ORDER_ITEM_SEQ_ID | ORDER_PART_SEQ_ID | PRODUCT_ID  | ITEM_DESCRIPTION      | QUANTITY | UNIT_AMOUNT | ITEM_TYPE_ENUM_ID | PARENT_ITEM_SEQ_ID |
+----------+-------------------+-------------------+-------------+-----------------------+----------+-------------+-------------------+--------------------+
| 100102   | 01                | 01                | DEMO_UNIT_1 | Demo Product Unit One | 3.000000 |    16.99000 | ItemProduct       | NULL               |
| 100102   | 02                | 01                | DEMO_UNIT_2 | Demo Product Unit Two | 3.000000 |    18.99000 | ItemProduct       | NULL               |
| 100102   | 03                | 01                | NULL        | Sales Tax             | 3.000000 |     2.33000 | ItemSalesTax      | 02                 |
+----------+-------------------+-------------------+-------------+-----------------------+----------+-------------+-------------------+--------------------+

10. List the Order Item details for only those products for which chargeShipping is set to "Y".

mysql> SELECT * FROM ORDER_ITEM WHERE Product_Id IN 
    -> (SELECT Product_Id FROM Product WHERE Charge_Shipping = 'Y');
+----------+-------------------+-------------------+-------------+-------------------------+----------+-------------+-------------------+--------------------+
| ORDER_ID | ORDER_ITEM_SEQ_ID | ORDER_PART_SEQ_ID | PRODUCT_ID  | ITEM_DESCRIPTION        | QUANTITY | UNIT_AMOUNT | ITEM_TYPE_ENUM_ID | PARENT_ITEM_SEQ_ID |
+----------+-------------------+-------------------+-------------+-------------------------+----------+-------------+-------------------+--------------------+
| 100051   | 02                | 02                | DEMO_UNIT_2 | Demo Product Unit Two   | 3.000000 |    18.99000 | ItemProduct       | NULL               |
| 100061   | 01                | 01                | DEMO_UNIT_2 | Demo Product Unit Two   | 2.000000 |    15.99000 | ItemProduct       | NULL               |
| 100064   | 02                | 02                | DEMO_UNIT_2 | Demo Product Unit Two   | 2.000000 |     6.33000 | ItemProduct       | NULL               |
| 100102   | 02                | 01                | DEMO_UNIT_2 | Demo Product Unit Two   | 3.000000 |    18.99000 | ItemProduct       | NULL               |
| 100052   | 01                | 01                | DEMO_UNIT_3 | Demo Product Unit Three | 1.000000 |    14.99000 | ItemProduct       | NULL               |
| 100102   | 04                | 02                | DEMO_UNIT_3 | Demo Product Unit Three | 1.000000 |    14.99000 | ItemProduct       | NULL               |
| 100153   | 01                | 01                | DEMO_UNIT_3 | Demo Product Unit Three | 1.000000 |    14.99000 | ItemProduct       | NULL               |
| 100153   | 03                | 01                | DEMO_UNIT_4 | Demo Product Unit Four  | 1.000000 |    12.99000 | ItemProduct       | NULL               |
| 100255   | 01                | 01                | DEMO_UNIT_4 | Demo Product Unit Four  | 3.000000 |    12.99000 | ItemProduct       | NULL               |
| 100061   | 02                | 02                | DEMO_UNIT_5 | Demo Product Unit Five  | 1.000000 |    55.09000 | ItemProduct       | NULL               |
| 100064   | 01                | 01                | DEMO_UNIT_5 | Demo Product Unit Five  | 3.000000 |    12.07000 | ItemProduct       | NULL               |
| 100255   | 03                | 02                | DEMO_UNIT_5 | Demo Product Unit Five  | 3.000000 |    10.99000 | ItemProduct       | NULL               |
+----------+-------------------+-------------------+-------------+-------------------------+----------+-------------+-------------------+--------------------+

11. Find order parts with part total less than equals to 20.


mysql> SELECT * FROM ORDER_PART WHERE Part_Total <= 20;
+----------+-------------------+-----------+----------------+-----------------+-------------------+------------+-------------+-------------------------+
| ORDER_ID | ORDER_PART_SEQ_ID | PART_NAME | STATUS_ID      | VENDOR_PARTY_ID | CUSTOMER_PARTY_ID | PART_TOTAL | FACILITY_ID | SHIPMENT_METHOD_ENUM_ID |
+----------+-------------------+-----------+----------------+-----------------+-------------------+------------+-------------+-------------------------+
| 100051   | 01                | #101      | OrderApproved  | OMS_VENDOR      | CustDemo1         |    16.9900 | ZIRET_WH    | ShMthGround             |
| 100052   | 01                | #103      | OrderApproved  | OMS_VENDOR      | CustDemo1         |    16.3200 | ZIRET_WH    | ShMthNextDay            |
| 100064   | 02                | #106      | OrderApproved  | OMS_VENDOR      | CustDemo6         |    12.6600 | ZIRET_WH    | ShMthNextDay            |
| 100102   | 02                | #105      | OrderCompleted | OMS_VENDOR      | CustDemo3         |    14.9900 | ZIRET_WH_2  | ShMthGround             |
+----------+-------------------+-----------+----------------+-----------------+-------------------+------------+-------------+-------------------------+

12. List the Person details whose employment status is either EmpsSelf or EmpsFullTime without using the OR operator.

mysql> SELECT * FROM Person WHERE Employment_Status_Enum_Id != 'EmpsPartTime';
+-----------+------------+------------+-------------+-----------+--------+------------+------------------------+---------------------------+-------------------+
| PARTY_ID  | SALUTATION | FIRST_NAME | MIDDLE_NAME | LAST_NAME | GENDER | BIRTH_DATE | MARITAL_STATUS_ENUM_ID | EMPLOYMENT_STATUS_ENUM_ID | OCCUPATION        |
+-----------+------------+------------+-------------+-----------+--------+------------+------------------------+---------------------------+-------------------+
| CustDemo1 | Mr         | Joe        | Q           | Public    | M      | 1999-06-15 | MarsSingle             | EmpsFullTime              | Software Engineer |
| CustDemo2 | Mr         | Jack       | John        | Smith     | M      | 1999-09-14 | MarsMarried            | EmpsFullTime              | Doctor            |
| CustDemo4 | Ms         | John       | J           | Norvig    | F      | 1998-06-11 | MarsSingle             | EmpsFullTime              | Software Engineer |
| CustDemo5 | Mr         | Charlie    | Jack        | William   | M      | 1992-04-22 | MarsMarried            | EmpsSelf                  | Architect         |
| CustDemo6 | Mr         | James      | W           | Evans     | M      | 1993-05-20 | MarsMarried            | EmpsFullTime              | Civil Engineer    |
+-----------+------------+------------+-------------+-----------+--------+------------+------------------------+---------------------------+-------------------+

13. Find the Order details assigned to the facility with ZIRET_WH value. Output the below fields for this query:
orderId, orderPartSeqId, facilityId, partName, customerPartyId, productId, itemDescription, quantity

mysql> SELECT OP.order_Id, OP.order_Part_Seq_Id, facility_Id, part_Name, customer_Party_Id, product_Id, item_Description, quantity
    -> FROM Order_Part OP, Order_Item OI
    -> WHERE Facility_Id = 'ZIRET_WH' AND OP.Order_Id = OI.Order_Id 
    -> AND OP.Order_Part_Seq_Id = OI.Order_Part_Seq_Id;
+----------+-------------------+-------------+-----------+-------------------+-------------+-------------------------+----------+
| order_Id | order_Part_Seq_Id | facility_Id | part_Name | customer_Party_Id | product_Id  | item_Description        | quantity |
+----------+-------------------+-------------+-----------+-------------------+-------------+-------------------------+----------+
| 100051   | 01                | ZIRET_WH    | #101      | CustDemo1         | DEMO_UNIT_1 | Demo Product Unit One   | 1.000000 |
| 100052   | 01                | ZIRET_WH    | #103      | CustDemo1         | DEMO_UNIT_3 | Demo Product Unit Three | 1.000000 |
| 100052   | 01                | ZIRET_WH    | #103      | CustDemo1         | NULL        | Sales Tax               | 1.000000 |
| 100061   | 01                | ZIRET_WH    | #101      | CustDemo6         | DEMO_UNIT_2 | Demo Product Unit Two   | 2.000000 |
| 100064   | 02                | ZIRET_WH    | #106      | CustDemo6         | DEMO_UNIT_2 | Demo Product Unit Two   | 2.000000 |
| 100102   | 01                | ZIRET_WH    | #104      | CustDemo3         | DEMO_UNIT_1 | Demo Product Unit One   | 3.000000 |
| 100102   | 01                | ZIRET_WH    | #104      | CustDemo3         | DEMO_UNIT_2 | Demo Product Unit Two   | 3.000000 |
| 100102   | 01                | ZIRET_WH    | #104      | CustDemo3         | NULL        | Sales Tax               | 3.000000 |
| 100153   | 01                | ZIRET_WH    | #106      | CustDemo4         | DEMO_UNIT_3 | Demo Product Unit Three | 1.000000 |
| 100153   | 01                | ZIRET_WH    | #106      | CustDemo4         | NULL        | Sales Tax               | 1.000000 |
| 100153   | 01                | ZIRET_WH    | #106      | CustDemo4         | DEMO_UNIT_4 | Demo Product Unit Four  | 1.000000 |
| 100153   | 01                | ZIRET_WH    | #106      | CustDemo4         | NULL        | Sales Tax               | 1.000000 |
| 100255   | 01                | ZIRET_WH    | #107      | CustDemo5         | DEMO_UNIT_4 | Demo Product Unit Four  | 3.000000 |
| 100255   | 01                | ZIRET_WH    | #107      | CustDemo5         | NULL        | Sales Tax               | 3.000000 |
+----------+-------------------+-------------+-----------+-------------------+-------------+-------------------------+----------+

14. Output the sum of the grandTotal from Order Header table for each placed date.

mysql> SELECT SUM(Grand_Total),Placed_Date FROM Order_Header GROUP BY Placed_Date;
+------------------+-------------------------+
| SUM(Grand_Total) | Placed_Date             |
+------------------+-------------------------+
|          87.0700 | 2019-04-24 00:00:00.000 |
|          75.9300 | 2020-03-19 00:00:00.000 |
|          94.2700 | 2020-04-17 00:00:00.000 |
|          31.6400 | 2020-04-19 00:00:00.000 |
|         129.9200 | 2021-04-17 00:00:00.000 |
|          48.8700 | 2022-01-09 00:00:00.000 |
+------------------+-------------------------+

15. List the Order Header records where grand total is greater than highest grand total of the order placed on 2020-04-17.

mysql> SELECT * FROM Order_Header WHERE Grand_Total > (SELECT MAX(Grand_Total) FROM Order_Header WHERE Placed_Date = '2020-04-17');
+----------+--------------+-------------------------+-------------------------+----------------+-----------------+-------------------+-----------------------+-------------+
| ORDER_ID | ORDER_NAME   | PLACED_DATE             | APPROVED_DATE           | STATUS_ID      | CURRENCY_UOM_ID | PRODUCT_STORE_ID  | SALES_CHANNEL_ENUM_ID | GRAND_TOTAL |
+----------+--------------+-------------------------+-------------------------+----------------+-----------------+-------------------+-----------------------+-------------+
| 100061   | Test Order 6 | 2019-04-24 00:00:00.000 | 2019-04-28 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     87.0700 |
| 100102   | Test Order 3 | 2021-04-17 00:00:00.000 | 2021-04-21 00:00:00.000 | OrderCompleted | USD             | OMS_DEFAULT_STORE | ScWeb                 |    129.9200 |
+----------+--------------+-------------------------+-------------------------+----------------+-----------------+-------------------+-----------------------+-------------+

16. Output the sum of the grandTotal from Order Header table for each placed date where total sum is greater than 60.

mysql> SELECT SUM,Placed_Date FROM (SELECT SUM(Grand_Total) as SUM ,Placed_Date FROM Order_Header GROUP BY Placed_Date) OD  WHERE SUM > 60;
+----------+-------------------------+
| SUM      | Placed_Date             |
+----------+-------------------------+
|  87.0700 | 2019-04-24 00:00:00.000 |
|  75.9300 | 2020-03-19 00:00:00.000 |
|  94.2700 | 2020-04-17 00:00:00.000 |
| 129.9200 | 2021-04-17 00:00:00.000 |
+----------+-------------------------+

17. Output the Person's party Id, first name, last name and orderId for all customers who have placed orders on 2020-04-17.

mysql> SELECT Party_Id,First_Name,Last_Name,Order_Id FROM Person,Order_Part WHERE Party_Id IN
    -> (SELECT Customer_Party_Id FROM Order_Part WHERE Order_Id IN
    ->  (SELECT Order_Id FROM Order_Header WHERE Placed_Date = '2020-04-17'))
    -> AND Party_Id = Customer_Party_Id;
+-----------+------------+-----------+----------+
| Party_Id  | First_Name | Last_Name | Order_Id |
+-----------+------------+-----------+----------+
| CustDemo1 | Joe        | Public    | 100051   |
| CustDemo1 | Joe        | Public    | 100051   |
| CustDemo1 | Joe        | Public    | 100052   |
+-----------+------------+-----------+----------+

18. List the Person details whose order status in Order Part table is OrderApproved using EXISTS operator.

mysql> SELECT * FROM Person WHERE EXISTS (SELECT Customer_Party_Id FROM Order_Part WHERE Status_Id = 'OrderApproved');
+-----------+------------+------------+-------------+-----------+--------+------------+------------------------+---------------------------+-------------------+
| PARTY_ID  | SALUTATION | FIRST_NAME | MIDDLE_NAME | LAST_NAME | GENDER | BIRTH_DATE | MARITAL_STATUS_ENUM_ID | EMPLOYMENT_STATUS_ENUM_ID | OCCUPATION        |
+-----------+------------+------------+-------------+-----------+--------+------------+------------------------+---------------------------+-------------------+
| CustDemo1 | Mr         | Joe        | Q           | Public    | M      | 1999-06-15 | MarsSingle             | EmpsFullTime              | Software Engineer |
| CustDemo2 | Mr         | Jack       | John        | Smith     | M      | 1999-09-14 | MarsMarried            | EmpsFullTime              | Doctor            |
| CustDemo3 | Ms         | Lily       | J           | Brown     | F      | 1998-06-11 | MarsDivorced           | EmpsPartTime              | Software Engineer |
| CustDemo4 | Ms         | John       | J           | Norvig    | F      | 1998-06-11 | MarsSingle             | EmpsFullTime              | Software Engineer |
| CustDemo5 | Mr         | Charlie    | Jack        | William   | M      | 1992-04-22 | MarsMarried            | EmpsSelf                  | Architect         |
| CustDemo6 | Mr         | James      | W           | Evans     | M      | 1993-05-20 | MarsMarried            | EmpsFullTime              | Civil Engineer    |
+-----------+------------+------------+-------------+-----------+--------+------------+------------------------+---------------------------+-------------------+

19. List the Order Header details for highest grandTotal for each placed date.

mysql> SELECT * FROM Order_Header WHERE Grand_Total IN (SELECT MAX(Grand_Total) FROM Order_Head
er GROUP BY Placed_Date);
+----------+--------------+-------------------------+-------------------------+----------------+-----------------+-------------------+-----------------------+-------------+
| ORDER_ID | ORDER_NAME   | PLACED_DATE             | APPROVED_DATE           | STATUS_ID      | CURRENCY_UOM_ID | PRODUCT_STORE_ID  | SALES_CHANNEL_ENUM_ID | GRAND_TOTAL |
+----------+--------------+-------------------------+-------------------------+----------------+-----------------+-------------------+-----------------------+-------------+
| 100051   | Test Order 1 | 2020-04-17 00:00:00.000 | 2020-04-19 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     77.9500 |
| 100061   | Test Order 6 | 2019-04-24 00:00:00.000 | 2019-04-28 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     87.0700 |
| 100064   | Test Order 7 | 2022-01-09 00:00:00.000 | 2022-01-10 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     48.8700 |
| 100102   | Test Order 3 | 2021-04-17 00:00:00.000 | 2021-04-21 00:00:00.000 | OrderCompleted | USD             | OMS_DEFAULT_STORE | ScWeb                 |    129.9200 |
| 100153   | Test Order 4 | 2020-04-19 00:00:00.000 | 2020-04-21 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     31.6400 |
| 100255   | Test Order 5 | 2020-03-19 00:00:00.000 | 2020-03-21 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     75.9300 |
+----------+--------------+-------------------------+-------------------------+----------------+-----------------+-------------------+-----------------------+-------------+

20. Find the count of order parts for each Person. Output the below details for this query:
	partyId, firstName, lastName, count

mysql> SELECT Party_Id, First_Name, Last_Name, Count FROM Person,
    -> (SELECT COUNT(*) as COUNT, Customer_Party_Id FROM Order_Part GROUP BY Customer_Party_Id) as OP
    -> WHERE Party_Id = Customer_Party_Id;
+-----------+------------+-----------+-------+
| Party_Id  | First_Name | Last_Name | Count |
+-----------+------------+-----------+-------+
| CustDemo1 | Joe        | Public    |     3 |
| CustDemo3 | Lily       | Brown     |     2 |
| CustDemo4 | John       | Norvig    |     1 |
| CustDemo5 | Charlie    | William   |     2 |
| CustDemo6 | James      | Evans     |     4 |
+-----------+------------+-----------+-------+

21. Output the customerPartyId and highest order grandTotal for each customer.

mysql> SELECT MAX(Grand_Total) as Highest_Grand_Total,Customer_Party_Id FROM Order_Header,
    -> (SELECT Customer_Party_Id,Order_Id FROM Order_Part) as OP
    -> WHERE OP.Order_Id = Order_Header.Order_Id Group BY Customer_Party_Id;
+---------------------+-------------------+
| Highest_Grand_Total | Customer_Party_Id |
+---------------------+-------------------+
|             77.9500 | CustDemo1         |
|            129.9200 | CustDemo3         |
|             31.6400 | CustDemo4         |
|             75.9300 | CustDemo5         |
|             87.0700 | CustDemo6         |
+---------------------+-------------------+

22. List the unique order Ids for the Order Headers with more than one Order Part.

mysql> SELECT OH.Order_Id FROM Order_Header OH,
    -> (SELECT Order_Id,COUNT(*) as Count FROM Order_Part GROUP BY Order_Id) OP
    -> WHERE Count > 1 AND OP.Order_Id = OH. Order_Id;
+----------+
| Order_Id |
+----------+
| 100051   |
| 100061   |
| 100064   |
| 100102   |
| 100255   |
+----------+

23. List all Order Header details whose grandTotal is greater than the average grandTotal for all orders placed on 2020-04-17.

mysql> SELECT * FROM Order_Header WHERE Grand_Total >
    -> (SELECT AVG(Grand_Total) FROM Order_Header WHERE Placed_Date = '2020-04-17');
+----------+--------------+-------------------------+-------------------------+----------------+-----------------+-------------------+-----------------------+-------------+
| ORDER_ID | ORDER_NAME   | PLACED_DATE             | APPROVED_DATE           | STATUS_ID      | CURRENCY_UOM_ID | PRODUCT_STORE_ID  | SALES_CHANNEL_ENUM_ID | GRAND_TOTAL |
+----------+--------------+-------------------------+-------------------------+----------------+-----------------+-------------------+-----------------------+-------------+
| 100051   | Test Order 1 | 2020-04-17 00:00:00.000 | 2020-04-19 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     77.9500 |
| 100061   | Test Order 6 | 2019-04-24 00:00:00.000 | 2019-04-28 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     87.0700 |
| 100064   | Test Order 7 | 2022-01-09 00:00:00.000 | 2022-01-10 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     48.8700 |
| 100102   | Test Order 3 | 2021-04-17 00:00:00.000 | 2021-04-21 00:00:00.000 | OrderCompleted | USD             | OMS_DEFAULT_STORE | ScWeb                 |    129.9200 |
| 100255   | Test Order 5 | 2020-03-19 00:00:00.000 | 2020-03-21 00:00:00.000 | OrderApproved  | USD             | OMS_DEFAULT_STORE | ScWeb                 |     75.9300 |
+----------+--------------+-------------------------+-------------------------+----------------+-----------------+-------------------+-----------------------+-------------+

24. List the ItemSalesTax Order Item Details for each order.

mysql> SELECT * FROM Order_Item WHERE ITEM_TYPE_ENUM_ID = 'ItemSalesTax';
+----------+-------------------+-------------------+------------+------------------+----------+-------------+-------------------+--------------------+
| ORDER_ID | ORDER_ITEM_SEQ_ID | ORDER_PART_SEQ_ID | PRODUCT_ID | ITEM_DESCRIPTION | QUANTITY | UNIT_AMOUNT | ITEM_TYPE_ENUM_ID | PARENT_ITEM_SEQ_ID |
+----------+-------------------+-------------------+------------+------------------+----------+-------------+-------------------+--------------------+
| 100051   | 03                | 02                | NULL       | Sales Tax        | 3.000000 |     1.33000 | ItemSalesTax      | 02                 |
| 100052   | 02                | 01                | NULL       | Sales Tax        | 1.000000 |     1.33000 | ItemSalesTax      | 01                 |
| 100102   | 03                | 01                | NULL       | Sales Tax        | 3.000000 |     2.33000 | ItemSalesTax      | 02                 |
| 100153   | 02                | 01                | NULL       | Sales Tax        | 1.000000 |     1.33000 | ItemSalesTax      | 01                 |
| 100153   | 04                | 01                | NULL       | Sales Tax        | 1.000000 |     2.33000 | ItemSalesTax      | 03                 |
| 100255   | 02                | 01                | NULL       | Sales Tax        | 3.000000 |     1.33000 | ItemSalesTax      | 01                 |
+----------+-------------------+-------------------+------------+------------------+----------+-------------+-------------------+--------------------+

25. List the below Order Information for the orderId, 100153.
	orderId
	orderPartSeqId
	customerPartyId
	firstName
	lastName
	placedDate
	orderItemSeqId
	productId
	itemDescription
	unitAmount
	quantity
	partTotal
	grandTotal
	
mysql> SELECT OH.Order_Id, OP.Order_Part_Seq_Id, Customer_Party_Id, First_Name, Last_Name, Placed_Date, Order_Item_Seq_Id, Pr.Product_Id, Item_Description, Unit_Amount, Quantity, Part_Total, Grand_Total
    -> FROM Person Pe, Product Pr, Order_Header OH, Order_Part OP, Order_Item OI
    -> WHERE OH.Order_Id = '100153' AND OH.Order_Id = OP.Order_Id AND Customer_Party_Id = Party_Id
    -> AND OH.Order_Id = OI.Order_Id AND Pr.Product_Id = OI.Product_Id;
+----------+-------------------+-------------------+------------+-----------+-------------------------+-------------------+-------------+-------------------------+-------------+----------+------------+-------------+
| Order_Id | Order_Part_Seq_Id | Customer_Party_Id | First_Name | Last_Name | Placed_Date             | Order_Item_Seq_Id | Product_Id  | Item_Description        | Unit_Amount | Quantity | Part_Total | Grand_Total |
+----------+-------------------+-------------------+------------+-----------+-------------------------+-------------------+-------------+-------------------------+-------------+----------+------------+-------------+
| 100153   | 01                | CustDemo4         | John       | Norvig    | 2020-04-19 00:00:00.000 | 01                | DEMO_UNIT_3 | Demo Product Unit Three |    14.99000 | 1.000000 |    31.6400 |     31.6400 |
| 100153   | 01                | CustDemo4         | John       | Norvig    | 2020-04-19 00:00:00.000 | 03                | DEMO_UNIT_4 | Demo Product Unit Four  |    12.99000 | 1.000000 |    31.6400 |     31.6400 |
+----------+-------------------+-------------------+------------+-----------+-------------------------+-------------------+-------------+-------------------------+-------------+----------+------------+-------------+

26. List the below Order details for the customer partyId, CustDemo1.
	orderId
	orderPartSeqId
	orderName
	partName
	customerPartyId
	facilityId
	orderItemSeqId
	productId
	itemDescription
	quantity
	unitAmount

mysql> SELECT OP.Order_Id, OP.Order_Part_Seq_Id, Order_Name, Part_Name, Customer_Party_Id, Facility_Id, Order_Item_Seq_Id, OI.Product_Id, Item_Description, Quantity, Unit_Amount
    -> FROM Order_Part OP, Order_Header OH, Order_Item OI, Product
    -> Where Customer_Party_Id = 'CustDemo1' AND OP.Order_Id = OH.Order_Id
    -> And OP.Order_Id = OI.Order_Id AND OI.Product_Id = Product.Product_Id
    -> AND OP.Order_Part_Seq_Id = OI.Order_Part_Seq_Id;
    
+----------+-------------------+--------------+-----------+-------------------+-------------+-------------------+-------------+-------------------------+----------+-------------+
| Order_Id | Order_Part_Seq_Id | Order_Name   | Part_Name | Customer_Party_Id | Facility_Id | Order_Item_Seq_Id | Product_Id  | Item_Description        | Quantity | Unit_Amount |
+----------+-------------------+--------------+-----------+-------------------+-------------+-------------------+-------------+-------------------------+----------+-------------+
| 100051   | 01                | Test Order 1 | #101      | CustDemo1         | ZIRET_WH    | 01                | DEMO_UNIT_1 | Demo Product Unit One   | 1.000000 |    16.99000 |
| 100051   | 02                | Test Order 1 | #102      | CustDemo1         | ZIRET_WH_1  | 02                | DEMO_UNIT_2 | Demo Product Unit Two   | 3.000000 |    18.99000 |
| 100052   | 01                | Test Order 2 | #103      | CustDemo1         | ZIRET_WH    | 01                | DEMO_UNIT_3 | Demo Product Unit Three | 1.000000 |    14.99000 |
+----------+-------------------+--------------+-----------+-------------------+-------------+-------------------+-------------+-------------------------+----------+-------------+

